// 指揮官名稱		Commander_Name  VARCHAR(12)
// 職業		      	Profession   VARCHAR(12)
// 指揮官HP	      	Commander_HP   VARCHAR(12)
// 行動狀態	      	Action_Status    VARCHAR(12)
// 地圖上形象		Map_image     VARCHAR(12)
// Y軸坐標			Y-axis_coordinate    VARCHAR(12)
// X軸坐標			X_coordinate        VARCHAR(12)
// 裝備武器			Equipped_with_weapons    VARCHAR(12)
// 輔助魔法效果		Auxiliary_magic_effect    VARCHAR(12)
// 裝備飾物	       	Equipment_accessories     VARCHAR(12)
// 裝備防具	       	Equipment_and_armor    VARCHAR(12)
// 傭兵所屬	       	Mercenary_belongs      VARCHAR(12)
// 傭兵兵種	       	Mercenary_arms                     VARCHAR(12)
// 傭兵HP			Mercenary_HP                                   VARCHAR(12)
// 傭兵行動狀態		Mercenary_action_status                                    VARCHAR(12)
// 傭兵		     	Mercenary                             VARCHAR(12)
// 部隊序號	     	Force_serial_number                   VARCHAR(12)
// 傭兵Y軸坐標		The_mercenary_Y_axis_coordinates    VARCHAR(12)
// 傭兵X軸坐標		The_mercenary_X_axis_coordinates     VARCHAR(12)
// 指令		      	Instruction                         VARCHAR(12)
// 所屬勢力	      	Belongs_forces                       VARCHAR(12)
// 指揮官經驗		Commander_of_experience              VARCHAR(12)
// 指揮官等級		Commander_Level                      VARCHAR(12)
// 最大MP			Max_MP                                VARCHAR(12)
// MP				MP                                    VARCHAR(12)
// 防禦力			Defense                               VARCHAR(12)
// 攻擊力			ATK                                   VARCHAR(12)
// 移動力			Moving_force                          VARCHAR(12)
// 指揮範圍			Command_range                          VARCHAR(12)
// 防禦修正			Defense_correction                     VARCHAR(12)
// 攻擊修正			Attack_modifier                        VARCHAR(12)
// 魔法16-23			Magic_16-23                            VARCHAR(12)
// 職業魔法防禦		Occupational_magic_defense              VARCHAR(12)
// 魔法1-7			Magic_1-7                               VARCHAR(12)
// 魔法8-15			Magic_8-15                             VARCHAR(12)
// 召喚獸MP			Summon_MP                               VARCHAR(12)
// 魅惑前所屬		Charm_of_before_they                    VARCHAR(12)
// 指揮官肖像		Commander_Portrait                      VARCHAR(12)
// ---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "dbMain.h"

// ---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
TForm1 *Form1;

// ---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner) : TForm(Owner)
{
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::FormKeyDown(TObject *Sender, WORD &Key,
	System::WideChar &KeyChar, TShiftState Shift)
{
	if (Key == VK_ESCAPE)
	{
		exit(0);
	}
}

// ---------------------------------------------------------------------------

void __fastcall TForm1::FormCreate(TObject *Sender)
{
	// btntest();

	// ListBox1->Width = 3000;

		ListBox1->Columns = 39;


 //	ListBox1->ListStyle = 1;
 //	ListBox1->ItemHeight = 30;
// 	ListBox1->ItemIndex = 39;
//	ListBox1->ItemWidth = 200;


	dbview();

}
// ---------------------------------------------------------------------------

void TForm1::btntest()
{

	sqlite3 *db = NULL;
	char *zErrMsg = 0;
	int rc;
	char *sql;

	rc = sqlite3_open("dice.db", &db);
	if (rc)
	{
		fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
		sqlite3_close(db);
		exit(1);
	}
	else
	{
	}

	int nrow = 0, ncolumn = 0;
	char ch1[10000] = "CREATE TABLE SensorData(ID INTEGER PRIMARY KEY,\
	 COMMANDER_NAME VARCHAR(12)	, PROFESSION VARCHAR(12), COMMANDER_HP VARCHAR(12),\
	 ACTION_STATUS VARCHAR(12), MAP_IMAGE VARCHAR(12), Y_AXIS_COORDINATE VARCHAR(12),\
	 X_COORDINATE VARCHAR(12),EQUIPPED_WITH_WEAPONS VARCHAR(12),\
	 AUXILIARY_MAGIC_EFFECT VARCHAR(12),EQUIPMENT_ACCESSORIES VARCHAR(12),\
	 EQUIPMENT_AND_ARMOR VARCHAR(12),MERCENARY_BELONGS VARCHAR(12),\
	 MERCENARY_ARMS VARCHAR(12), MERCENARY_HP VARCHAR(12),\
	 MERCENARY_ACTION_STATUS VARCHAR(12), MERCENARY VARCHAR(12),	\
	 FORCE_SERIAL_NUMBER VARCHAR(12), THE_MERCENARY_Y_AXIS_COORDINATES VARCHAR(12), \
	 THE_MERCENARY_X_AXIS_COORDINATES VARCHAR(12), INSTRUCTION VARCHAR(12), \
	 BELONGS_FORCES VARCHAR(12), COMMANDER_OF_EXPERIENCE VARCHAR(12),   \
	 COMMANDER_LEVEL VARCHAR(12), MAX_MP VARCHAR(12), MP VARCHAR(12),   \
	 DEFENSE VARCHAR(12), ATK VARCHAR(12), MOVING_FORCE VARCHAR(12), \
	 COMMAND_RANGE VARCHAR(12), DEFENSE_CORRECTION VARCHAR(12), \
	 ATTACK_MODIFIER VARCHAR(12), MAGIC_16_23 VARCHAR(12),\
	 OCCUPATIONAL_MAGIC_DEFENSE VARCHAR(12), MAGIC_1_7 VARCHAR(12), \
	 MAGIC_8_15 VARCHAR(12), SUMMON_MP VARCHAR(12), CHARM_OF_BEFORE_THEY VARCHAR(12), \
	 COMMANDER_PORTRAIT VARCHAR(12) );";

	sql = ch1;
	sqlite3_exec(db, sql, 0, 0, &zErrMsg);

	// char aa[4096] = "INSERT INTO \"SensorData\" VALUES( NULL ,'我愛羅', 3);";
	char aa[10000] =
		"INSERT INTO \"SensorData\" VALUES( NULL ,'指揮官名稱','職業','指揮官HP','行動狀態','地圖上形象','Y軸坐標','X軸坐標','裝備武器','輔助魔法效果','裝備飾物','裝備防具','傭兵所屬','傭兵兵種','傭兵HP','傭兵行動狀態','傭兵','部隊序號','傭兵Y軸坐標','傭兵X軸坐標','指令','所屬勢力','指揮官經驗','指揮官等級','最大MP','MP','防禦力','攻擊力','移動力','指揮範圍','防禦修正','攻擊修正','魔法16-23','職業魔法防禦','魔法1-7','魔法8-15','召喚獸MP','魅惑前所屬','指揮官肖像');";

	sql = aa;
	sqlite3_exec(db, sql, 0, 0, &zErrMsg);

	sqlite3_close(db);

}

void TForm1::dbview()
{
	sqlite3 *db = NULL;
	char *zErrMsg = 0;
	int rc;
	char *sql;

	rc = sqlite3_open("dice.db", &db);
	if (rc)
	{
		fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
		sqlite3_close(db);
		exit(1);
	}
	else
	{
	}

	char aa[1024] = "select * from SensorData;";
	int nrow = 0, ncolumn = 0;
	char **azResult; // 二維數組存放結果

	sql = aa;
	// MessageBoxA(NULL, "cc", "oo", MB_OK);
	sqlite3_get_table(db, sql, &azResult, &nrow, &ncolumn, &zErrMsg);
	for (int i = 0; i < (nrow + 1) * ncolumn; i++)
	{
		// std::cout << azResult[i] << std::endl;
		// MessageBoxA(NULL, azResult[i], "oo", MB_OK);
		ListBox1->Items->Add(azResult[i]);
	}
	sqlite3_free_table(azResult);
	sqlite3_close(db);
}
