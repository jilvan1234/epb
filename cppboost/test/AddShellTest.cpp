#include <stdio.h>
#include "AddShell.h"

void AddShellTest()
{
  printf("z00000000=\n");
  printf(" [F] %s\n",z00000000());
  printf(" [S] %s\n","update");
  printf("z00000001=\n");
  printf(" [F] %s\n",z00000001());
  printf(" [S] %s\n","update");
  printf("z00000002=\n");
  printf(" [F] %s\n",z00000002());
  printf(" [S] %s\n","GroupList");
  printf("z00000003=\n");
  printf(" [F] %s\n",z00000003());
  printf(" [S] %s\n","GroupList");
  printf("z00000004=\n");
  printf(" [F] %s\n",z00000004());
  printf(" [S] %s\n","UserList");
  printf("z00000005=\n");
  printf(" [F] %s\n",z00000005());
  printf(" [S] %s\n","UserList");
  printf("z00000006=\n");
  printf(" [F] %s\n",z00000006());
  printf(" [S] %s\n","GetSoftwareName");
  printf("z00000007=\n");
  printf(" [F] %s\n",z00000007());
  printf(" [S] %s\n","GetSoftwareName");
  printf("z00000008=\n");
  printf(" [F] %s\n",z00000008());
  printf(" [S] %s\n","GetSoftwarePathName");
  printf("z00000009=\n");
  printf(" [F] %s\n",z00000009());
  printf(" [S] %s\n","GetSoftwarePathName");
  printf("z00000010=\n");
  printf(" [F] %s\n",z00000010());
  printf(" [S] %s\n","SoftwareTick");
  printf("z00000011=\n");
  printf(" [F] %s\n",z00000011());
  printf(" [S] %s\n","SoftwareTick");
  printf("z00000012=\n");
  printf(" [F] %s\n",z00000012());
  printf(" [S] %s\n","APPDel");
  printf("z00000013=\n");
  printf(" [F] %s\n",z00000013());
  printf(" [S] %s\n","APPDel");
  printf("z00000014=\n");
  printf(" [F] %s\n",z00000014());
  printf(" [S] %s\n","APPAdd");
  printf("z00000015=\n");
  printf(" [F] %s\n",z00000015());
  printf(" [S] %s\n","APPAdd");
  printf("z00000016=\n");
  printf(" [F] %s\n",z00000016());
  printf(" [S] %s\n","groupadd");
  printf("z00000017=\n");
  printf(" [F] %s\n",z00000017());
  printf(" [S] %s\n","groupadd");
  printf("z00000018=\n");
  printf(" [F] %s\n",z00000018());
  printf(" [S] %s\n","groupdel");
  printf("z00000019=\n");
  printf(" [F] %s\n",z00000019());
  printf(" [S] %s\n","groupdel");
  printf("z00000020=\n");
  printf(" [F] %s\n",z00000020());
  printf(" [S] %s\n","UserAdd");
  printf("z00000021=\n");
  printf(" [F] %s\n",z00000021());
  printf(" [S] %s\n","UserAdd");
  printf("z00000022=\n");
  printf(" [F] %s\n",z00000022());
  printf(" [S] %s\n","UserDel");
  printf("z00000023=\n");
  printf(" [F] %s\n",z00000023());
  printf(" [S] %s\n","UserDel");
  printf("z00000024=\n");
  printf(" [F] %s\n",z00000024());
  printf(" [S] %s\n","gg");
  printf("z00000025=\n");
  printf(" [F] %s\n",z00000025());
  printf(" [S] %s\n","gg");
  printf("z00000026=\n");
  printf(" [F] %s\n",z00000026());
  printf(" [S] %s\n","UserMod");
  printf("z00000027=\n");
  printf(" [F] %s\n",z00000027());
  printf(" [S] %s\n","UserMod");
  printf("z00000028=\n");
  printf(" [F] %s\n",z00000028());
  printf(" [S] %s\n","ManagementAccount");
  printf("z00000029=\n");
  printf(" [F] %s\n",z00000029());
  printf(" [S] %s\n","ManagementAccount");
  printf("z00000030=\n");
  printf(" [F] %s\n",z00000030());
  printf(" [S] %s\n","Founding");
  printf("z00000031=\n");
  printf(" [F] %s\n",z00000031());
  printf(" [S] %s\n","Founding");
  printf("z00000032=\n");
  printf(" [F] %s\n",z00000032());
  printf(" [S] %s\n","Detail");
  printf("z00000033=\n");
  printf(" [F] %s\n",z00000033());
  printf(" [S] %s\n","Detail");
  printf("z00000034=\n");
  printf(" [F] %s\n",z00000034());
  printf(" [S] %s\n","MissionList");
  printf("z00000035=\n");
  printf(" [F] %s\n",z00000035());
  printf(" [S] %s\n","MissionList");
  printf("z00000036=\n");
  printf(" [F] %s\n",z00000036());
  printf(" [S] %s\n","Deposit");
  printf("z00000037=\n");
  printf(" [F] %s\n",z00000037());
  printf(" [S] %s\n","Deposit");
  printf("z00000038=\n");
  printf(" [F] %s\n",z00000038());
  printf(" [S] %s\n","NewAccount");
  printf("z00000039=\n");
  printf(" [F] %s\n",z00000039());
  printf(" [S] %s\n","NewAccount");
  printf("z00000040=\n");
  printf(" [F] %s\n",z00000040());
  printf(" [S] %s\n","Entrust");
  printf("z00000041=\n");
  printf(" [F] %s\n",z00000041());
  printf(" [S] %s\n","Entrust");
  printf("z00000042=\n");
  printf(" [F] %s\n",z00000042());
  printf(" [S] %s\n","Receivingtask");
  printf("z00000043=\n");
  printf(" [F] %s\n",z00000043());
  printf(" [S] %s\n","Receivingtask");
  printf("z00000044=\n");
  printf(" [F] %s\n",z00000044());
  printf(" [S] %s\n","Connection");
  printf("z00000045=\n");
  printf(" [F] %s\n",z00000045());
  printf(" [S] %s\n","Connection");
  printf("z00000046=\n");
  printf(" [F] %s\n",z00000046());
  printf(" [S] %s\n","OffsetCoordinates");
  printf("z00000047=\n");
  printf(" [F] %s\n",z00000047());
  printf(" [S] %s\n","OffsetCoordinates");
  printf("z00000048=\n");
  printf(" [F] %s\n",z00000048());
  printf(" [S] %s\n","GetAppMax");
  printf("z00000049=\n");
  printf(" [F] %s\n",z00000049());
  printf(" [S] %s\n","GetAppMax");
  printf("z00000050=\n");
  printf(" [F] %s\n",z00000050());
  printf(" [S] %s\n","GetAppUse");
  printf("z00000051=\n");
  printf(" [F] %s\n",z00000051());
  printf(" [S] %s\n","GetAppUse");
  printf("z00000052=\n");
  printf(" [F] %s\n",z00000052());
  printf(" [S] %s\n","Approve");
  printf("z00000053=\n");
  printf(" [F] %s\n",z00000053());
  printf(" [S] %s\n","Approve");
  printf("z00000054=\n");
  printf(" [F] %s\n",z00000054());
  printf(" [S] %s\n","AppLogout");
  printf("z00000055=\n");
  printf(" [F] %s\n",z00000055());
  printf(" [S] %s\n","AppLogout");
  printf("z00000056=\n");
  printf(" [F] %s\n",z00000056());
  printf(" [S] %s\n","update");
  printf("z00000057=\n");
  printf(" [F] %s\n",z00000057());
  printf(" [S] %s\n","make -C /var/yp");
  printf("z00000058=\n");
  printf(" [F] %s\n",z00000058());
  printf(" [S] %s\n","r");
  printf("z00000059=\n");
  printf(" [F] %s\n",z00000059());
  printf(" [S] %s\n","popen() error!");
  printf("z00000060=\n");
  printf(" [F] %s\n",z00000060());
  printf(" [S] %s\n","GroupList");
  printf("z00000061=\n");
  printf(" [F] %s\n",z00000061());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000062=\n");
  printf(" [F] %s\n",z00000062());
  printf(" [S] %s\n","r");
  printf("z00000063=\n");
  printf(" [F] %s\n",z00000063());
  printf(" [S] %s\n","popen() error!");
  printf("z00000064=\n");
  printf(" [F] %s\n",z00000064());
  printf(" [S] %s\n","%s");
  printf("z00000065=\n");
  printf(" [F] %s\n",z00000065());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $3}'");
  printf("z00000066=\n");
  printf(" [F] %s\n",z00000066());
  printf(" [S] %s\n","r");
  printf("z00000067=\n");
  printf(" [F] %s\n",z00000067());
  printf(" [S] %s\n","popen() error!");
  printf("z00000068=\n");
  printf(" [F] %s\n",z00000068());
  printf(" [S] %s\n","cat /etc/passwd | awk 'BEGIN {FS=\":\"} $4==");
  printf("z00000069=\n");
  printf(" [F] %s\n",z00000069());
  printf(" [S] %s\n"," {print $1\",\"$4}'");
  printf("z00000070=\n");
  printf(" [F] %s\n",z00000070());
  printf(" [S] %s\n","r");
  printf("z00000071=\n");
  printf(" [F] %s\n",z00000071());
  printf(" [S] %s\n","popen() error!");
  printf("z00000072=\n");
  printf(" [F] %s\n",z00000072());
  printf(" [S] %s\n","%s");
  printf("z00000073=\n");
  printf(" [F] %s\n",z00000073());
  printf(" [S] %s\n","test.db");
  printf("z00000074=\n");
  printf(" [F] %s\n",z00000074());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000075=\n");
  printf(" [F] %s\n",z00000075());
  printf(" [S] %s\n","select APPNAME,APPON,APPPATHNAME from sensordata where GROUPNAME = \"%s\";");
  printf("z00000076=\n");
  printf(" [F] %s\n",z00000076());
  printf(" [S] %s\n","APPNAME");
  printf("z00000077=\n");
  printf(" [F] %s\n",z00000077());
  printf(" [S] %s\n","APPON");
  printf("z00000078=\n");
  printf(" [F] %s\n",z00000078());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000079=\n");
  printf(" [F] %s\n",z00000079());
  printf(" [S] %s\n","!@");
  printf("z00000080=\n");
  printf(" [F] %s\n",z00000080());
  printf(" [S] %s\n","#$");
  printf("z00000081=\n");
  printf(" [F] %s\n",z00000081());
  printf(" [S] %s\n","%^");
  printf("z00000082=\n");
  printf(" [F] %s\n",z00000082());
  printf(" [S] %s\n","\n");
  printf("z00000083=\n");
  printf(" [F] %s\n",z00000083());
  printf(" [S] %s\n","%s");
  printf("z00000084=\n");
  printf(" [F] %s\n",z00000084());
  printf(" [S] %s\n",",");
  printf("z00000085=\n");
  printf(" [F] %s\n",z00000085());
  printf(" [S] %s\n","test.db");
  printf("z00000086=\n");
  printf(" [F] %s\n",z00000086());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000087=\n");
  printf(" [F] %s\n",z00000087());
  printf(" [S] %s\n","select APPPATHNAME from sensordata where APPNAME = \"%s\" and GROUPNAME = \"%s\";");
  printf("z00000088=\n");
  printf(" [F] %s\n",z00000088());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000089=\n");
  printf(" [F] %s\n",z00000089());
  printf(" [S] %s\n","%s");
  printf("z00000090=\n");
  printf(" [F] %s\n",z00000090());
  printf(" [S] %s\n"," ");
  printf("z00000091=\n");
  printf(" [F] %s\n",z00000091());
  printf(" [S] %s\n","test.db");
  printf("z00000092=\n");
  printf(" [F] %s\n",z00000092());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000093=\n");
  printf(" [F] %s\n",z00000093());
  printf(" [S] %s\n","update sensordata set APPON = \"%s\" where GROUPNAME = \"%s\" and APPNAME = \"%s\";");
  printf("z00000094=\n");
  printf(" [F] %s\n",z00000094());
  printf(" [S] %s\n","test.db");
  printf("z00000095=\n");
  printf(" [F] %s\n",z00000095());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000096=\n");
  printf(" [F] %s\n",z00000096());
  printf(" [S] %s\n","delete from SensorData where APPNAME='%s';");
  printf("z00000097=\n");
  printf(" [F] %s\n",z00000097());
  printf(" [S] %s\n","/home/project/");
  printf("z00000098=\n");
  printf(" [F] %s\n",z00000098());
  printf(" [S] %s\n","rm -r /home/project/");
  printf("z00000099=\n");
  printf(" [F] %s\n",z00000099());
  printf(" [S] %s\n","r");
  printf("z00000100=\n");
  printf(" [F] %s\n",z00000100());
  printf(" [S] %s\n","popen() error!");
  printf("z00000101=\n");
  printf(" [F] %s\n",z00000101());
  printf(" [S] %s\n","/home/project/Phancloud/Reg/");
  printf("z00000102=\n");
  printf(" [F] %s\n",z00000102());
  printf(" [S] %s\n","rm -r /home/project/Phancloud/Reg/");
  printf("z00000103=\n");
  printf(" [F] %s\n",z00000103());
  printf(" [S] %s\n","r");
  printf("z00000104=\n");
  printf(" [F] %s\n",z00000104());
  printf(" [S] %s\n","popen() error!");
  printf("z00000105=\n");
  printf(" [F] %s\n",z00000105());
  printf(" [S] %s\n",",");
  printf("z00000106=\n");
  printf(" [F] %s\n",z00000106());
  printf(" [S] %s\n","/PhancloudData");
  printf("z00000107=\n");
  printf(" [F] %s\n",z00000107());
  printf(" [S] %s\n","mkdir /PhancloudData");
  printf("z00000108=\n");
  printf(" [F] %s\n",z00000108());
  printf(" [S] %s\n","r");
  printf("z00000109=\n");
  printf(" [F] %s\n",z00000109());
  printf(" [S] %s\n","popen() error!");
  printf("z00000110=\n");
  printf(" [F] %s\n",z00000110());
  printf(" [S] %s\n","/PhancloudData/App");
  printf("z00000111=\n");
  printf(" [F] %s\n",z00000111());
  printf(" [S] %s\n","mkdir /PhancloudData/App");
  printf("z00000112=\n");
  printf(" [F] %s\n",z00000112());
  printf(" [S] %s\n","r");
  printf("z00000113=\n");
  printf(" [F] %s\n",z00000113());
  printf(" [S] %s\n","popen() error!");
  printf("z00000114=\n");
  printf(" [F] %s\n",z00000114());
  printf(" [S] %s\n","chmod 777 /PhancloudData/App/");
  printf("z00000115=\n");
  printf(" [F] %s\n",z00000115());
  printf(" [S] %s\n","r");
  printf("z00000116=\n");
  printf(" [F] %s\n",z00000116());
  printf(" [S] %s\n","popen() error!");
  printf("z00000117=\n");
  printf(" [F] %s\n",z00000117());
  printf(" [S] %s\n","test.db");
  printf("z00000118=\n");
  printf(" [F] %s\n",z00000118());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000119=\n");
  printf(" [F] %s\n",z00000119());
  printf(" [S] %s\n","%s");
  printf("z00000120=\n");
  printf(" [F] %s\n",z00000120());
  printf(" [S] %s\n","CREATE TABLE SensorData(ID INTEGER PRIMARY KEY,GROUPNAME VARCHAR(12),APPNAME VARCHAR(12) ,APPON INTEGER ,APPPATHNAME VARCHAR(12),APPMAX INTEGER,APPUSE INTEGER);");
  printf("z00000121=\n");
  printf(" [F] %s\n",z00000121());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1}'");
  printf("z00000122=\n");
  printf(" [F] %s\n",z00000122());
  printf(" [S] %s\n","r");
  printf("z00000123=\n");
  printf(" [F] %s\n",z00000123());
  printf(" [S] %s\n","popen() error!");
  printf("z00000124=\n");
  printf(" [F] %s\n",z00000124());
  printf(" [S] %s\n","INSERT INTO \"SensorData\" VALUES( NULL ,'%s', '%s' , 0 , '%s' ,'%s' , 0);");
  printf("z00000125=\n");
  printf(" [F] %s\n",z00000125());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000126=\n");
  printf(" [F] %s\n",z00000126());
  printf(" [S] %s\n","r");
  printf("z00000127=\n");
  printf(" [F] %s\n",z00000127());
  printf(" [S] %s\n","popen() error!");
  printf("z00000128=\n");
  printf(" [F] %s\n",z00000128());
  printf(" [S] %s\n",",");
  printf("z00000129=\n");
  printf(" [F] %s\n",z00000129());
  printf(" [S] %s\n","Presence of the group");
  printf("z00000130=\n");
  printf(" [F] %s\n",z00000130());
  printf(" [S] %s\n","groupadd ");
  printf("z00000131=\n");
  printf(" [F] %s\n",z00000131());
  printf(" [S] %s\n","Add a Group ");
  printf("z00000132=\n");
  printf(" [F] %s\n",z00000132());
  printf(" [S] %s\n","r");
  printf("z00000133=\n");
  printf(" [F] %s\n",z00000133());
  printf(" [S] %s\n","popen() error!");
  printf("z00000134=\n");
  printf(" [F] %s\n",z00000134());
  printf(" [S] %s\n","/PhancloudData");
  printf("z00000135=\n");
  printf(" [F] %s\n",z00000135());
  printf(" [S] %s\n","mkdir /PhancloudData");
  printf("z00000136=\n");
  printf(" [F] %s\n",z00000136());
  printf(" [S] %s\n","r");
  printf("z00000137=\n");
  printf(" [F] %s\n",z00000137());
  printf(" [S] %s\n","popen() error!");
  printf("z00000138=\n");
  printf(" [F] %s\n",z00000138());
  printf(" [S] %s\n","/PhancloudData/Group");
  printf("z00000139=\n");
  printf(" [F] %s\n",z00000139());
  printf(" [S] %s\n","mkdir /PhancloudData/Group");
  printf("z00000140=\n");
  printf(" [F] %s\n",z00000140());
  printf(" [S] %s\n","r");
  printf("z00000141=\n");
  printf(" [F] %s\n",z00000141());
  printf(" [S] %s\n","popen() error!");
  printf("z00000142=\n");
  printf(" [F] %s\n",z00000142());
  printf(" [S] %s\n","mkdir /PhancloudData/Group/");
  printf("z00000143=\n");
  printf(" [F] %s\n",z00000143());
  printf(" [S] %s\n","r");
  printf("z00000144=\n");
  printf(" [F] %s\n",z00000144());
  printf(" [S] %s\n","popen() error!");
  printf("z00000145=\n");
  printf(" [F] %s\n",z00000145());
  printf(" [S] %s\n","chown root:");
  printf("z00000146=\n");
  printf(" [F] %s\n",z00000146());
  printf(" [S] %s\n"," /PhancloudData/Group/");
  printf("z00000147=\n");
  printf(" [F] %s\n",z00000147());
  printf(" [S] %s\n","r");
  printf("z00000148=\n");
  printf(" [F] %s\n",z00000148());
  printf(" [S] %s\n","popen() error!");
  printf("z00000149=\n");
  printf(" [F] %s\n",z00000149());
  printf(" [S] %s\n","chmod 777 /PhancloudData/Group/");
  printf("z00000150=\n");
  printf(" [F] %s\n",z00000150());
  printf(" [S] %s\n","r");
  printf("z00000151=\n");
  printf(" [F] %s\n",z00000151());
  printf(" [S] %s\n","popen() error!");
  printf("z00000152=\n");
  printf(" [F] %s\n",z00000152());
  printf(" [S] %s\n","/etc/samba/smb.conf");
  printf("z00000153=\n");
  printf(" [F] %s\n",z00000153());
  printf(" [S] %s\n",";");
  printf("z00000154=\n");
  printf(" [F] %s\n",z00000154());
  printf(" [S] %s\n","start");
  printf("z00000155=\n");
  printf(" [F] %s\n",z00000155());
  printf(" [S] %s\n","[");
  printf("z00000156=\n");
  printf(" [F] %s\n",z00000156());
  printf(" [S] %s\n","]");
  printf("z00000157=\n");
  printf(" [F] %s\n",z00000157());
  printf(" [S] %s\n","comment    = Temporary file space");
  printf("z00000158=\n");
  printf(" [F] %s\n",z00000158());
  printf(" [S] %s\n","path       = /PhancloudData/Group/");
  printf("z00000159=\n");
  printf(" [F] %s\n",z00000159());
  printf(" [S] %s\n","writable   = yes");
  printf("z00000160=\n");
  printf(" [F] %s\n",z00000160());
  printf(" [S] %s\n","guest ok   = yes");
  printf("z00000161=\n");
  printf(" [F] %s\n",z00000161());
  printf(" [S] %s\n",";");
  printf("z00000162=\n");
  printf(" [F] %s\n",z00000162());
  printf(" [S] %s\n","end");
  printf("z00000163=\n");
  printf(" [F] %s\n",z00000163());
  printf(" [S] %s\n","test.db");
  printf("z00000164=\n");
  printf(" [F] %s\n",z00000164());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000165=\n");
  printf(" [F] %s\n",z00000165());
  printf(" [S] %s\n","%s");
  printf("z00000166=\n");
  printf(" [F] %s\n",z00000166());
  printf(" [S] %s\n","CREATE TABLE SensorData(ID INTEGER PRIMARY KEY,GROUPNAME VARCHAR(12),APPNAME VARCHAR(12) ,APPON INTEGER ,APPPATHNAME VARCHAR(12),APPMAX INTEGER,APPUSE INTEGER);");
  printf("z00000167=\n");
  printf(" [F] %s\n",z00000167());
  printf(" [S] %s\n","%s");
  printf("z00000168=\n");
  printf(" [F] %s\n",z00000168());
  printf(" [S] %s\n","select distinct APPNAME,APPPATHNAME,APPMAX from sensordata ;");
  printf("z00000169=\n");
  printf(" [F] %s\n",z00000169());
  printf(" [S] %s\n","APPNAME");
  printf("z00000170=\n");
  printf(" [F] %s\n",z00000170());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000171=\n");
  printf(" [F] %s\n",z00000171());
  printf(" [S] %s\n","APPMAX");
  printf("z00000172=\n");
  printf(" [F] %s\n",z00000172());
  printf(" [S] %s\n","\n");
  printf("z00000173=\n");
  printf(" [F] %s\n",z00000173());
  printf(" [S] %s\n",",");
  printf("z00000174=\n");
  printf(" [F] %s\n",z00000174());
  printf(" [S] %s\n",",");
  printf("z00000175=\n");
  printf(" [F] %s\n",z00000175());
  printf(" [S] %s\n","INSERT INTO \"SensorData\" VALUES( NULL ,'%s', '%s' , 0 , '%s' , '%s' , 0);");
  printf("z00000176=\n");
  printf(" [F] %s\n",z00000176());
  printf(" [S] %s\n","x exception error");
  printf("z00000177=\n");
  printf(" [F] %s\n",z00000177());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000178=\n");
  printf(" [F] %s\n",z00000178());
  printf(" [S] %s\n","r");
  printf("z00000179=\n");
  printf(" [F] %s\n",z00000179());
  printf(" [S] %s\n","popen() error!");
  printf("z00000180=\n");
  printf(" [F] %s\n",z00000180());
  printf(" [S] %s\n",",");
  printf("z00000181=\n");
  printf(" [F] %s\n",z00000181());
  printf(" [S] %s\n","groupdel ");
  printf("z00000182=\n");
  printf(" [F] %s\n",z00000182());
  printf(" [S] %s\n","Delete Group ");
  printf("z00000183=\n");
  printf(" [F] %s\n",z00000183());
  printf(" [S] %s\n","r");
  printf("z00000184=\n");
  printf(" [F] %s\n",z00000184());
  printf(" [S] %s\n","popen() error!");
  printf("z00000185=\n");
  printf(" [F] %s\n",z00000185());
  printf(" [S] %s\n","/PhancloudData/Group/");
  printf("z00000186=\n");
  printf(" [F] %s\n",z00000186());
  printf(" [S] %s\n","rm -r /PhancloudData/Group/");
  printf("z00000187=\n");
  printf(" [F] %s\n",z00000187());
  printf(" [S] %s\n","r");
  printf("z00000188=\n");
  printf(" [F] %s\n",z00000188());
  printf(" [S] %s\n","popen() error!");
  printf("z00000189=\n");
  printf(" [F] %s\n",z00000189());
  printf(" [S] %s\n","/etc/samba/smb.conf");
  printf("z00000190=\n");
  printf(" [F] %s\n",z00000190());
  printf(" [S] %s\n","\n");
  printf("z00000191=\n");
  printf(" [F] %s\n",z00000191());
  printf(" [S] %s\n",";");
  printf("z00000192=\n");
  printf(" [F] %s\n",z00000192());
  printf(" [S] %s\n","start");
  printf("z00000193=\n");
  printf(" [F] %s\n",z00000193());
  printf(" [S] %s\n",";");
  printf("z00000194=\n");
  printf(" [F] %s\n",z00000194());
  printf(" [S] %s\n","end");
  printf("z00000195=\n");
  printf(" [F] %s\n",z00000195());
  printf(" [S] %s\n","/etc/samba/smb.conf");
  printf("z00000196=\n");
  printf(" [F] %s\n",z00000196());
  printf(" [S] %s\n","test.db");
  printf("z00000197=\n");
  printf(" [F] %s\n",z00000197());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000198=\n");
  printf(" [F] %s\n",z00000198());
  printf(" [S] %s\n","delete from SensorData where GROUPNAME='%s';");
  printf("z00000199=\n");
  printf(" [F] %s\n",z00000199());
  printf(" [S] %s\n","The group does not exist, can not be deleted");
  printf("z00000200=\n");
  printf(" [F] %s\n",z00000200());
  printf(" [S] %s\n","x exception error");
  printf("z00000201=\n");
  printf(" [F] %s\n",z00000201());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000202=\n");
  printf(" [F] %s\n",z00000202());
  printf(" [S] %s\n","r");
  printf("z00000203=\n");
  printf(" [F] %s\n",z00000203());
  printf(" [S] %s\n","popen() error!");
  printf("z00000204=\n");
  printf(" [F] %s\n",z00000204());
  printf(" [S] %s\n",",");
  printf("z00000205=\n");
  printf(" [F] %s\n",z00000205());
  printf(" [S] %s\n","  ");
  printf("z00000206=\n");
  printf(" [F] %s\n",z00000206());
  printf(" [S] %s\n","cat /etc/passwd | awk 'BEGIN {FS=\":\"} $4 >= 1000 {print $1}'");
  printf("z00000207=\n");
  printf(" [F] %s\n",z00000207());
  printf(" [S] %s\n","r");
  printf("z00000208=\n");
  printf(" [F] %s\n",z00000208());
  printf(" [S] %s\n","popen() error!");
  printf("z00000209=\n");
  printf(" [F] %s\n",z00000209());
  printf(" [S] %s\n"," ");
  printf("z00000210=\n");
  printf(" [F] %s\n",z00000210());
  printf(" [S] %s\n","This user");
  printf("z00000211=\n");
  printf(" [F] %s\n",z00000211());
  printf(" [S] %s\n","useradd -m -g ");
  printf("z00000212=\n");
  printf(" [F] %s\n",z00000212());
  printf(" [S] %s\n","r");
  printf("z00000213=\n");
  printf(" [F] %s\n",z00000213());
  printf(" [S] %s\n","popen() error!");
  printf("z00000214=\n");
  printf(" [F] %s\n",z00000214());
  printf(" [S] %s\n"," ");
  printf("z00000215=\n");
  printf(" [F] %s\n",z00000215());
  printf(" [S] %s\n","echo \"");
  printf("z00000216=\n");
  printf(" [F] %s\n",z00000216());
  printf(" [S] %s\n","In the group ");
  printf("z00000217=\n");
  printf(" [F] %s\n",z00000217());
  printf(" [S] %s\n"," Add User ");
  printf("z00000218=\n");
  printf(" [F] %s\n",z00000218());
  printf(" [S] %s\n",":rootroot\"| chpasswd");
  printf("z00000219=\n");
  printf(" [F] %s\n",z00000219());
  printf(" [S] %s\n","r");
  printf("z00000220=\n");
  printf(" [F] %s\n",z00000220());
  printf(" [S] %s\n","popen() error!");
  printf("z00000221=\n");
  printf(" [F] %s\n",z00000221());
  printf(" [S] %s\n","chmod 777 /home/");
  printf("z00000222=\n");
  printf(" [F] %s\n",z00000222());
  printf(" [S] %s\n","r");
  printf("z00000223=\n");
  printf(" [F] %s\n",z00000223());
  printf(" [S] %s\n","popen() error!");
  printf("z00000224=\n");
  printf(" [F] %s\n",z00000224());
  printf(" [S] %s\n","(echo rootroot;echo rootroot)|smbpasswd -s -a  ");
  printf("z00000225=\n");
  printf(" [F] %s\n",z00000225());
  printf(" [S] %s\n","r");
  printf("z00000226=\n");
  printf(" [F] %s\n",z00000226());
  printf(" [S] %s\n","popen() error!");
  printf("z00000227=\n");
  printf(" [F] %s\n",z00000227());
  printf(" [S] %s\n","x例外錯誤");
  printf("z00000228=\n");
  printf(" [F] %s\n",z00000228());
  printf(" [S] %s\n","The group does not exist");
  printf("z00000229=\n");
  printf(" [F] %s\n",z00000229());
  printf(" [S] %s\n","x exception error");
  printf("z00000230=\n");
  printf(" [F] %s\n",z00000230());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000231=\n");
  printf(" [F] %s\n",z00000231());
  printf(" [S] %s\n","r");
  printf("z00000232=\n");
  printf(" [F] %s\n",z00000232());
  printf(" [S] %s\n","popen() error!");
  printf("z00000233=\n");
  printf(" [F] %s\n",z00000233());
  printf(" [S] %s\n",",");
  printf("z00000234=\n");
  printf(" [F] %s\n",z00000234());
  printf(" [S] %s\n","  ");
  printf("z00000235=\n");
  printf(" [F] %s\n",z00000235());
  printf(" [S] %s\n","cat /etc/passwd | awk 'BEGIN {FS=\":\"} $4 >= 1000 {print $1}'");
  printf("z00000236=\n");
  printf(" [F] %s\n",z00000236());
  printf(" [S] %s\n","r");
  printf("z00000237=\n");
  printf(" [F] %s\n",z00000237());
  printf(" [S] %s\n","popen() error!");
  printf("z00000238=\n");
  printf(" [F] %s\n",z00000238());
  printf(" [S] %s\n"," ");
  printf("z00000239=\n");
  printf(" [F] %s\n",z00000239());
  printf(" [S] %s\n","pdbedit -x -u ");
  printf("z00000240=\n");
  printf(" [F] %s\n",z00000240());
  printf(" [S] %s\n","r");
  printf("z00000241=\n");
  printf(" [F] %s\n",z00000241());
  printf(" [S] %s\n","popen() error!");
  printf("z00000242=\n");
  printf(" [F] %s\n",z00000242());
  printf(" [S] %s\n","userdel -r ");
  printf("z00000243=\n");
  printf(" [F] %s\n",z00000243());
  printf(" [S] %s\n","Delete a user ");
  printf("z00000244=\n");
  printf(" [F] %s\n",z00000244());
  printf(" [S] %s\n","r");
  printf("z00000245=\n");
  printf(" [F] %s\n",z00000245());
  printf(" [S] %s\n","popen() error!");
  printf("z00000246=\n");
  printf(" [F] %s\n",z00000246());
  printf(" [S] %s\n","/home/");
  printf("z00000247=\n");
  printf(" [F] %s\n",z00000247());
  printf(" [S] %s\n","rm -r /home/");
  printf("z00000248=\n");
  printf(" [F] %s\n",z00000248());
  printf(" [S] %s\n","r");
  printf("z00000249=\n");
  printf(" [F] %s\n",z00000249());
  printf(" [S] %s\n","popen() error!");
  printf("z00000250=\n");
  printf(" [F] %s\n",z00000250());
  printf(" [S] %s\n","This user");
  printf("z00000251=\n");
  printf(" [F] %s\n",z00000251());
  printf(" [S] %s\n","x exception error");
  printf("z00000252=\n");
  printf(" [F] %s\n",z00000252());
  printf(" [S] %s\n","The group does not exist");
  printf("z00000253=\n");
  printf(" [F] %s\n",z00000253());
  printf(" [S] %s\n","x exception error");
  printf("z00000254=\n");
  printf(" [F] %s\n",z00000254());
  printf(" [S] %s\n","cat /etc/passwd | awk 'BEGIN {FS=\":\"} $1 == \"");
  printf("z00000255=\n");
  printf(" [F] %s\n",z00000255());
  printf(" [S] %s\n","\" {print $4}'");
  printf("z00000256=\n");
  printf(" [F] %s\n",z00000256());
  printf(" [S] %s\n","r");
  printf("z00000257=\n");
  printf(" [F] %s\n",z00000257());
  printf(" [S] %s\n","popen() error!");
  printf("z00000258=\n");
  printf(" [F] %s\n",z00000258());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3 == ");
  printf("z00000259=\n");
  printf(" [F] %s\n",z00000259());
  printf(" [S] %s\n"," {print $1}'");
  printf("z00000260=\n");
  printf(" [F] %s\n",z00000260());
  printf(" [S] %s\n","r");
  printf("z00000261=\n");
  printf(" [F] %s\n",z00000261());
  printf(" [S] %s\n","popen() error!");
  printf("z00000262=\n");
  printf(" [F] %s\n",z00000262());
  printf(" [S] %s\n","%s");
  printf("z00000263=\n");
  printf(" [F] %s\n",z00000263());
  printf(" [S] %s\n","cat /etc/group | awk 'BEGIN {FS=\":\"} $3>999 && $3<65533 {print $1\",\"$3}'");
  printf("z00000264=\n");
  printf(" [F] %s\n",z00000264());
  printf(" [S] %s\n","r");
  printf("z00000265=\n");
  printf(" [F] %s\n",z00000265());
  printf(" [S] %s\n","popen() error!");
  printf("z00000266=\n");
  printf(" [F] %s\n",z00000266());
  printf(" [S] %s\n",",");
  printf("z00000267=\n");
  printf(" [F] %s\n",z00000267());
  printf(" [S] %s\n","  ");
  printf("z00000268=\n");
  printf(" [F] %s\n",z00000268());
  printf(" [S] %s\n","cat /etc/passwd | awk 'BEGIN {FS=\":\"} $4 >= 1000 {print $1}'");
  printf("z00000269=\n");
  printf(" [F] %s\n",z00000269());
  printf(" [S] %s\n","r");
  printf("z00000270=\n");
  printf(" [F] %s\n",z00000270());
  printf(" [S] %s\n","popen() error!");
  printf("z00000271=\n");
  printf(" [F] %s\n",z00000271());
  printf(" [S] %s\n"," ");
  printf("z00000272=\n");
  printf(" [F] %s\n",z00000272());
  printf(" [S] %s\n","usermod -g ");
  printf("z00000273=\n");
  printf(" [F] %s\n",z00000273());
  printf(" [S] %s\n","r");
  printf("z00000274=\n");
  printf(" [F] %s\n",z00000274());
  printf(" [S] %s\n","popen() error!");
  printf("z00000275=\n");
  printf(" [F] %s\n",z00000275());
  printf(" [S] %s\n","x exception error");
  printf("z00000276=\n");
  printf(" [F] %s\n",z00000276());
  printf(" [S] %s\n","The group does not exist");
  printf("z00000277=\n");
  printf(" [F] %s\n",z00000277());
  printf(" [S] %s\n","x exception error");
  printf("z00000278=\n");
  printf(" [F] %s\n",z00000278());
  printf(" [S] %s\n",",");
  printf("z00000279=\n");
  printf(" [F] %s\n",z00000279());
  printf(" [S] %s\n","admin");
  printf("z00000280=\n");
  printf(" [F] %s\n",z00000280());
  printf(" [S] %s\n","rootroot");
  printf("z00000281=\n");
  printf(" [F] %s\n",z00000281());
  printf(" [S] %s\n","%s");
  printf("z00000282=\n");
  printf(" [F] %s\n",z00000282());
  printf(" [S] %s\n","1");
  printf("z00000283=\n");
  printf(" [F] %s\n",z00000283());
  printf(" [S] %s\n","%f");
  printf("z00000284=\n");
  printf(" [F] %s\n",z00000284());
  printf(" [S] %s\n","Mission.db");
  printf("z00000285=\n");
  printf(" [F] %s\n",z00000285());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000286=\n");
  printf(" [F] %s\n",z00000286());
  printf(" [S] %s\n","%s");
  printf("z00000287=\n");
  printf(" [F] %s\n",z00000287());
  printf(" [S] %s\n","CREATE TABLE sensorsata(ID INTEGER PRIMARY KEY,TITLE VARCHAR(12),CONTENT VARCHAR(12) ,DATE VARCHAR(12),PERSONNEL INTEGER,WHETHER INTEGER ,TASKCODE VARCHAR(12),ACOBUF VARCHAR(12));");
  printf("z00000288=\n");
  printf(" [F] %s\n",z00000288());
  printf(" [S] %s\n","%s");
  printf("z00000289=\n");
  printf(" [F] %s\n",z00000289());
  printf(" [S] %s\n","%[^,],%[^,],%[^,],%[^,],%[^,],%s");
  printf("z00000290=\n");
  printf(" [F] %s\n",z00000290());
  printf(" [S] %s\n","\t");
  printf("z00000291=\n");
  printf(" [F] %s\n",z00000291());
  printf(" [S] %s\n","\t");
  printf("z00000292=\n");
  printf(" [F] %s\n",z00000292());
  printf(" [S] %s\n","\t");
  printf("z00000293=\n");
  printf(" [F] %s\n",z00000293());
  printf(" [S] %s\n","\t");
  printf("z00000294=\n");
  printf(" [F] %s\n",z00000294());
  printf(" [S] %s\n","INSERT INTO \"sensorsata\" VALUES( NULL ,'%s', '%s' , '%s' , %d , 0 , '%s', '%s');");
  printf("z00000295=\n");
  printf(" [F] %s\n",z00000295());
  printf(" [S] %s\n","Mission.db");
  printf("z00000296=\n");
  printf(" [F] %s\n",z00000296());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000297=\n");
  printf(" [F] %s\n",z00000297());
  printf(" [S] %s\n","SELECT * FROM sensorsata;");
  printf("z00000298=\n");
  printf(" [F] %s\n",z00000298());
  printf(" [S] %s\n","WHETHER");
  printf("z00000299=\n");
  printf(" [F] %s\n",z00000299());
  printf(" [S] %s\n","ACOBUF");
  printf("z00000300=\n");
  printf(" [F] %s\n",z00000300());
  printf(" [S] %s\n","TASKCODE");
  printf("z00000301=\n");
  printf(" [F] %s\n",z00000301());
  printf(" [S] %s\n","PERSONNEL");
  printf("z00000302=\n");
  printf(" [F] %s\n",z00000302());
  printf(" [S] %s\n","ID");
  printf("z00000303=\n");
  printf(" [F] %s\n",z00000303());
  printf(" [S] %s\n","TITLE");
  printf("z00000304=\n");
  printf(" [F] %s\n",z00000304());
  printf(" [S] %s\n","CONTENT");
  printf("z00000305=\n");
  printf(" [F] %s\n",z00000305());
  printf(" [S] %s\n","DATE");
  printf("z00000306=\n");
  printf(" [F] %s\n",z00000306());
  printf(" [S] %s\n","+Wrap+");
  printf("z00000307=\n");
  printf(" [F] %s\n",z00000307());
  printf(" [S] %s\n",",");
  printf("z00000308=\n");
  printf(" [F] %s\n",z00000308());
  printf(" [S] %s\n","%s");
  printf("z00000309=\n");
  printf(" [F] %s\n",z00000309());
  printf(" [S] %s\n",",");
  printf("z00000310=\n");
  printf(" [F] %s\n",z00000310());
  printf(" [S] %s\n","Account.db");
  printf("z00000311=\n");
  printf(" [F] %s\n",z00000311());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000312=\n");
  printf(" [F] %s\n",z00000312());
  printf(" [S] %s\n","select ACOBUF from sensorsata where ACOBUF = \"%s\" and PASSBUF = \"%s\";");
  printf("z00000313=\n");
  printf(" [F] %s\n",z00000313());
  printf(" [S] %s\n","ACOBUF");
  printf("z00000314=\n");
  printf(" [F] %s\n",z00000314());
  printf(" [S] %s\n","PASSBUF");
  printf("z00000315=\n");
  printf(" [F] %s\n",z00000315());
  printf(" [S] %s\n","RECEIVINGTASK");
  printf("z00000316=\n");
  printf(" [F] %s\n",z00000316());
  printf(" [S] %s\n","ID");
  printf("z00000317=\n");
  printf(" [F] %s\n",z00000317());
  printf(" [S] %s\n","TASKCODE");
  printf("z00000318=\n");
  printf(" [F] %s\n",z00000318());
  printf(" [S] %s\n","%s");
  printf("z00000319=\n");
  printf(" [F] %s\n",z00000319());
  printf(" [S] %s\n","1");
  printf("z00000320=\n");
  printf(" [F] %s\n",z00000320());
  printf(" [S] %s\n",",");
  printf("z00000321=\n");
  printf(" [F] %s\n",z00000321());
  printf(" [S] %s\n","Account.db");
  printf("z00000322=\n");
  printf(" [F] %s\n",z00000322());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000323=\n");
  printf(" [F] %s\n",z00000323());
  printf(" [S] %s\n","%s");
  printf("z00000324=\n");
  printf(" [F] %s\n",z00000324());
  printf(" [S] %s\n","CREATE TABLE sensorsata(ID INTEGER PRIMARY KEY,ACOBUF VARCHAR(12),PASSBUF VARCHAR(12) ,RECEIVINGTASK VARCHAR(12),TASKCODE VARCHAR(12));");
  printf("z00000325=\n");
  printf(" [F] %s\n",z00000325());
  printf(" [S] %s\n","delete from sensorsata where ACOBUF='%s' and PASSBUF='%s';");
  printf("z00000326=\n");
  printf(" [F] %s\n",z00000326());
  printf(" [S] %s\n","INSERT INTO \"sensorsata\" VALUES( NULL ,'%s', '%s' , '' , '');");
  printf("z00000327=\n");
  printf(" [F] %s\n",z00000327());
  printf(" [S] %s\n","%s");
  printf("z00000328=\n");
  printf(" [F] %s\n",z00000328());
  printf(" [S] %s\n","1");
  printf("z00000329=\n");
  printf(" [F] %s\n",z00000329());
  printf(" [S] %s\n",",");
  printf("z00000330=\n");
  printf(" [F] %s\n",z00000330());
  printf(" [S] %s\n","Account.db");
  printf("z00000331=\n");
  printf(" [F] %s\n",z00000331());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000332=\n");
  printf(" [F] %s\n",z00000332());
  printf(" [S] %s\n","select RECEIVINGTASK from sensorsata where ACOBUF = \"%s\";");
  printf("z00000333=\n");
  printf(" [F] %s\n",z00000333());
  printf(" [S] %s\n","ACOBUF");
  printf("z00000334=\n");
  printf(" [F] %s\n",z00000334());
  printf(" [S] %s\n","PASSBUF");
  printf("z00000335=\n");
  printf(" [F] %s\n",z00000335());
  printf(" [S] %s\n","RECEIVINGTASK");
  printf("z00000336=\n");
  printf(" [F] %s\n",z00000336());
  printf(" [S] %s\n","ID");
  printf("z00000337=\n");
  printf(" [F] %s\n",z00000337());
  printf(" [S] %s\n","TASKCODE");
  printf("z00000338=\n");
  printf(" [F] %s\n",z00000338());
  printf(" [S] %s\n",",");
  printf("z00000339=\n");
  printf(" [F] %s\n",z00000339());
  printf(" [S] %s\n","update sensorsata set RECEIVINGTASK = \"%s\" where ACOBUF = \"%s\" ;");
  printf("z00000340=\n");
  printf(" [F] %s\n",z00000340());
  printf(" [S] %s\n","Account.db");
  printf("z00000341=\n");
  printf(" [F] %s\n",z00000341());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000342=\n");
  printf(" [F] %s\n",z00000342());
  printf(" [S] %s\n","select RECEIVINGTASK from sensorsata where ACOBUF = \"%s\";");
  printf("z00000343=\n");
  printf(" [F] %s\n",z00000343());
  printf(" [S] %s\n","ACOBUF");
  printf("z00000344=\n");
  printf(" [F] %s\n",z00000344());
  printf(" [S] %s\n","PASSBUF");
  printf("z00000345=\n");
  printf(" [F] %s\n",z00000345());
  printf(" [S] %s\n","RECEIVINGTASK");
  printf("z00000346=\n");
  printf(" [F] %s\n",z00000346());
  printf(" [S] %s\n","ID");
  printf("z00000347=\n");
  printf(" [F] %s\n",z00000347());
  printf(" [S] %s\n","TASKCODE");
  printf("z00000348=\n");
  printf(" [F] %s\n",z00000348());
  printf(" [S] %s\n","%s");
  printf("z00000349=\n");
  printf(" [F] %s\n",z00000349());
  printf(" [S] %s\n","test.db");
  printf("z00000350=\n");
  printf(" [F] %s\n",z00000350());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000351=\n");
  printf(" [F] %s\n",z00000351());
  printf(" [S] %s\n","select APPUSE from sensordata where  APPNAME = \"%s\";");
  printf("z00000352=\n");
  printf(" [F] %s\n",z00000352());
  printf(" [S] %s\n","APPUSE");
  printf("z00000353=\n");
  printf(" [F] %s\n",z00000353());
  printf(" [S] %s\n","APPNAME");
  printf("z00000354=\n");
  printf(" [F] %s\n",z00000354());
  printf(" [S] %s\n","APPMAX");
  printf("z00000355=\n");
  printf(" [F] %s\n",z00000355());
  printf(" [S] %s\n","%s");
  printf("z00000356=\n");
  printf(" [F] %s\n",z00000356());
  printf(" [S] %s\n","test.db");
  printf("z00000357=\n");
  printf(" [F] %s\n",z00000357());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000358=\n");
  printf(" [F] %s\n",z00000358());
  printf(" [S] %s\n","select APPMAX from sensordata where  APPNAME = \"%s\";");
  printf("z00000359=\n");
  printf(" [F] %s\n",z00000359());
  printf(" [S] %s\n","APPUSE");
  printf("z00000360=\n");
  printf(" [F] %s\n",z00000360());
  printf(" [S] %s\n","APPNAME");
  printf("z00000361=\n");
  printf(" [F] %s\n",z00000361());
  printf(" [S] %s\n","APPMAX");
  printf("z00000362=\n");
  printf(" [F] %s\n",z00000362());
  printf(" [S] %s\n","%s");
  printf("z00000363=\n");
  printf(" [F] %s\n",z00000363());
  printf(" [S] %s\n","S");
  printf("z00000364=\n");
  printf(" [F] %s\n",z00000364());
  printf(" [S] %s\n","cc.db");
  printf("z00000365=\n");
  printf(" [F] %s\n",z00000365());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000366=\n");
  printf(" [F] %s\n",z00000366());
  printf(" [S] %s\n","select APPUSE from sensordata where  APPNAME = \"%s\";");
  printf("z00000367=\n");
  printf(" [F] %s\n",z00000367());
  printf(" [S] %s\n","APPUSE");
  printf("z00000368=\n");
  printf(" [F] %s\n",z00000368());
  printf(" [S] %s\n","APPNAME");
  printf("z00000369=\n");
  printf(" [F] %s\n",z00000369());
  printf(" [S] %s\n","%s");
  printf("z00000370=\n");
  printf(" [F] %s\n",z00000370());
  printf(" [S] %s\n",",");
  printf("z00000371=\n");
  printf(" [F] %s\n",z00000371());
  printf(" [S] %s\n","login.db");
  printf("z00000372=\n");
  printf(" [F] %s\n",z00000372());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000373=\n");
  printf(" [F] %s\n",z00000373());
  printf(" [S] %s\n","delete from SensorData where APPPATHNAME='%s' AND USERIP ='%s' AND USERNAME ='%s' ;");
  printf("z00000374=\n");
  printf(" [F] %s\n",z00000374());
  printf(" [S] %s\n","%s");
  printf("z00000375=\n");
  printf(" [F] %s\n",z00000375());
  printf(" [S] %s\n","select distinct APPPATHNAME,USERIP,USERNAME from sensordata ;");
  printf("z00000376=\n");
  printf(" [F] %s\n",z00000376());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000377=\n");
  printf(" [F] %s\n",z00000377());
  printf(" [S] %s\n","USERIP");
  printf("z00000378=\n");
  printf(" [F] %s\n",z00000378());
  printf(" [S] %s\n","USERNAME");
  printf("z00000379=\n");
  printf(" [F] %s\n",z00000379());
  printf(" [S] %s\n","\n");
  printf("z00000380=\n");
  printf(" [F] %s\n",z00000380());
  printf(" [S] %s\n",",");
  printf("z00000381=\n");
  printf(" [F] %s\n",z00000381());
  printf(" [S] %s\n",",");
  printf("z00000382=\n");
  printf(" [F] %s\n",z00000382());
  printf(" [S] %s\n","test.db");
  printf("z00000383=\n");
  printf(" [F] %s\n",z00000383());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000384=\n");
  printf(" [F] %s\n",z00000384());
  printf(" [S] %s\n","%s");
  printf("z00000385=\n");
  printf(" [F] %s\n",z00000385());
  printf(" [S] %s\n","select distinct APPPATHNAME,APPMAX from sensordata ;");
  printf("z00000386=\n");
  printf(" [F] %s\n",z00000386());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000387=\n");
  printf(" [F] %s\n",z00000387());
  printf(" [S] %s\n","APPMAX");
  printf("z00000388=\n");
  printf(" [F] %s\n",z00000388());
  printf(" [S] %s\n","\n");
  printf("z00000389=\n");
  printf(" [F] %s\n",z00000389());
  printf(" [S] %s\n",",");
  printf("z00000390=\n");
  printf(" [F] %s\n",z00000390());
  printf(" [S] %s\n","\n");
  printf("z00000391=\n");
  printf(" [F] %s\n",z00000391());
  printf(" [S] %s\n",",");
  printf("z00000392=\n");
  printf(" [F] %s\n",z00000392());
  printf(" [S] %s\n","%d");
  printf("z00000393=\n");
  printf(" [F] %s\n",z00000393());
  printf(" [S] %s\n","update sensordata set APPUSE = \"%s\" where APPPATHNAME = \"%s\";");
  printf("z00000394=\n");
  printf(" [F] %s\n",z00000394());
  printf(" [S] %s\n","OK");
  printf("z00000395=\n");
  printf(" [F] %s\n",z00000395());
  printf(" [S] %s\n","%s");
  printf("z00000396=\n");
  printf(" [F] %s\n",z00000396());
  printf(" [S] %s\n","NO");
  printf("z00000397=\n");
  printf(" [F] %s\n",z00000397());
  printf(" [S] %s\n","%s");
  printf("z00000398=\n");
  printf(" [F] %s\n",z00000398());
  printf(" [S] %s\n","%s");
  printf("z00000399=\n");
  printf(" [F] %s\n",z00000399());
  printf(" [S] %s\n","OK");
  printf("z00000400=\n");
  printf(" [F] %s\n",z00000400());
  printf(" [S] %s\n",",");
  printf("z00000401=\n");
  printf(" [F] %s\n",z00000401());
  printf(" [S] %s\n","login.db");
  printf("z00000402=\n");
  printf(" [F] %s\n",z00000402());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000403=\n");
  printf(" [F] %s\n",z00000403());
  printf(" [S] %s\n","%s");
  printf("z00000404=\n");
  printf(" [F] %s\n",z00000404());
  printf(" [S] %s\n","CREATE TABLE SensorData(ID INTEGER PRIMARY KEY,GROUPNAME VARCHAR(12),APPNAME VARCHAR(12) ,APPPATHNAME VARCHAR(12),USERIP VARCHAR(12),USERNAME VARCHAR(12),LOGINTIME VARCHAR(12));");
  printf("z00000405=\n");
  printf(" [F] %s\n",z00000405());
  printf(" [S] %s\n","INSERT INTO \"SensorData\" VALUES( NULL ,'%s','%s','%s','%s','%s','%s');");
  printf("z00000406=\n");
  printf(" [F] %s\n",z00000406());
  printf(" [S] %s\n","%s");
  printf("z00000407=\n");
  printf(" [F] %s\n",z00000407());
  printf(" [S] %s\n","select distinct APPPATHNAME,USERIP,USERNAME from sensordata ;");
  printf("z00000408=\n");
  printf(" [F] %s\n",z00000408());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000409=\n");
  printf(" [F] %s\n",z00000409());
  printf(" [S] %s\n","USERIP");
  printf("z00000410=\n");
  printf(" [F] %s\n",z00000410());
  printf(" [S] %s\n","USERNAME");
  printf("z00000411=\n");
  printf(" [F] %s\n",z00000411());
  printf(" [S] %s\n","\n");
  printf("z00000412=\n");
  printf(" [F] %s\n",z00000412());
  printf(" [S] %s\n",",");
  printf("z00000413=\n");
  printf(" [F] %s\n",z00000413());
  printf(" [S] %s\n",",");
  printf("z00000414=\n");
  printf(" [F] %s\n",z00000414());
  printf(" [S] %s\n","test.db");
  printf("z00000415=\n");
  printf(" [F] %s\n",z00000415());
  printf(" [S] %s\n","Can't open database: %s\n");
  printf("z00000416=\n");
  printf(" [F] %s\n",z00000416());
  printf(" [S] %s\n","%s");
  printf("z00000417=\n");
  printf(" [F] %s\n",z00000417());
  printf(" [S] %s\n","select distinct APPPATHNAME,APPMAX from sensordata ;");
  printf("z00000418=\n");
  printf(" [F] %s\n",z00000418());
  printf(" [S] %s\n","APPPATHNAME");
  printf("z00000419=\n");
  printf(" [F] %s\n",z00000419());
  printf(" [S] %s\n","APPMAX");
  printf("z00000420=\n");
  printf(" [F] %s\n",z00000420());
  printf(" [S] %s\n","\n");
  printf("z00000421=\n");
  printf(" [F] %s\n",z00000421());
  printf(" [S] %s\n",",");
  printf("z00000422=\n");
  printf(" [F] %s\n",z00000422());
  printf(" [S] %s\n","\n");
  printf("z00000423=\n");
  printf(" [F] %s\n",z00000423());
  printf(" [S] %s\n",",");
  printf("z00000424=\n");
  printf(" [F] %s\n",z00000424());
  printf(" [S] %s\n","%d");
  printf("z00000425=\n");
  printf(" [F] %s\n",z00000425());
  printf(" [S] %s\n","update sensordata set APPUSE = \"%s\" where APPPATHNAME = \"%s\";");
  printf("z00000426=\n");
  printf(" [F] %s\n",z00000426());
  printf(" [S] %s\n","OK");
  printf("z00000427=\n");
  printf(" [F] %s\n",z00000427());
  printf(" [S] %s\n","%s");
  printf("z00000428=\n");
  printf(" [F] %s\n",z00000428());
  printf(" [S] %s\n","NO");
  printf("z00000429=\n");
  printf(" [F] %s\n",z00000429());
  printf(" [S] %s\n","%s");
  printf("z00000430=\n");
  printf(" [F] %s\n",z00000430());
  printf(" [S] %s\n","%s");
  printf("z00000431=\n");
  printf(" [F] %s\n",z00000431());
  printf(" [S] %s\n","OK");
  printf("z00000432=\n");
  printf(" [F] %s\n",z00000432());
  printf(" [S] %s\n","\n");
}
